import streamlit as st
import pandas as pd
import plotly.express as px

# Carregar os dados simulados
def load_data():
    data = {
        "Receita Total (R$)": 9735383.85,
        "Lucro L√≠quido (R$)": 8342569.75,
        "Margem L√≠quida (%)": 85.69,
        "Ticket M√©dio (R$)": 19509.79,
        "Life Time Value (LTV) (R$)": 19509.79,
        "Vendas por Vendedor": {
            "A": 2023026.90,
            "B": 2068453.65,
            "C": 1797927.30,
            "D": 1880748.00,
            "E": 1965228.00
        },
        "Convers√£o por Vendedor (%)": {
            "A": 22.61,
            "B": 25.55,
            "C": 22.04,
            "D": 21.54,
            "E": 24.07
        },
        "Tempo M√©dio para Convers√£o por Vendedor (dias)": {
            "A": 11,
            "B": 11,
            "C": 10,
            "D": 6,
            "E": 8
        }
    }
    return data

def main():
    st.set_page_config(page_title="Dashboard de Monetiza√ß√£o e Receita", layout="wide")
    st.title("üìä Dashboard de Monetiza√ß√£o e Receita")
    st.markdown("---")
    
    # Carregar dados
    data = load_data()
    
    # KPIs Principais
    col1, col2, col3 = st.columns(3)
    col1.metric("Receita Total", f"R$ {data['Receita Total (R$)']:,.2f}")
    col2.metric("Lucro L√≠quido", f"R$ {data['Lucro L√≠quido (R$)']:,.2f}")
    col3.metric("Margem L√≠quida", f"{data['Margem L√≠quida (%)']}%")
    
    col4, col5 = st.columns(2)
    col4.metric("Ticket M√©dio", f"R$ {data['Ticket M√©dio (R$)']:,.2f}")
    col5.metric("Life Time Value (LTV)", f"R$ {data['Life Time Value (LTV) (R$)']:,.2f}")
    
    st.markdown("---")
    
    # Gr√°fico de Receita por Vendedor
    st.subheader("üìå Receita por Vendedor")
    df_vendas = pd.DataFrame({
        "Vendedor": list(data["Vendas por Vendedor"].keys()),
        "Receita (R$)": list(data["Vendas por Vendedor"].values())
    })
    fig_vendas = px.bar(df_vendas, x="Vendedor", y="Receita (R$)", title="Receita Total por Vendedor", color="Vendedor", text="Receita (R$)", color_discrete_sequence=["#A6CEE3"])
    st.plotly_chart(fig_vendas)
    
    # Gr√°fico de Convers√£o por Vendedor
    st.subheader("üìå Taxa de Convers√£o por Vendedor")
    df_conversao = pd.DataFrame({
        "Vendedor": list(data["Convers√£o por Vendedor (%)"].keys()),
        "Convers√£o (%)": list(data["Convers√£o por Vendedor (%)"].values())
    })
    fig_conversao = px.bar(df_conversao, x="Vendedor", y="Convers√£o (%)", title="Taxa de Convers√£o por Vendedor", color="Vendedor", text="Convers√£o (%)", color_discrete_sequence=["#B2DF8A"])
    st.plotly_chart(fig_conversao)
    
    # Gr√°fico de Tempo M√©dio de Convers√£o por Vendedor
    st.subheader("üìå Tempo M√©dio para Convers√£o por Vendedor")
    df_tempo = pd.DataFrame({
        "Vendedor": list(data["Tempo M√©dio para Convers√£o por Vendedor (dias)"].keys()),
        "Tempo M√©dio (dias)": list(data["Tempo M√©dio para Convers√£o por Vendedor (dias)"].values())
    })
    fig_tempo = px.bar(df_tempo, x="Vendedor", y="Tempo M√©dio (dias)", title="Tempo M√©dio para Convers√£o por Vendedor", color="Vendedor", text="Tempo M√©dio (dias)", color_discrete_sequence=["#FDBF6F"])
    st.plotly_chart(fig_tempo)
    
if __name__ == "__main__":
    main()
